<div id="uom" class="bg-white border-start border-end border-bottom border-1 p-3 mb-3 tab-pane fade show" role="tabpanel">
  <% uom = Uom.new(match.id) %>
  <% n_list = [] %>
  <% uom.sections.each do |match_type, records| %>
    <h5><%= match_type %></h5>
    <% keys = records.first.keys %>
    <% qty = records.first['QTY_per_LUN'] %>
    <% n_list << qty %>
    <% rec = uom.records(qty) %>

    <div class="unit_of_measure mb-4" data-controller="units">
      <table class="table table-sm table-responsive table-consolidate">
        <thead>
        <tr>
          <th></th>
          <% keys.each do |heading| %>
            <% next if heading == 'matnr' %>
            <th><%= t(heading) %></th>
          <% end %>
        </tr>
        </thead>

        <tbody>
        <% original = nil %>
        <% records.each do |record| %>

          <% original = record['Alt_UoM'] if (record['matnr'] == rec['prefixed_matnr'] && record['Alt_UoM'] == rec['original_unit']) %>
          <tr class="<%= banner(record['matnr'][0]).downcase %>">
            <td>
              <%= radio_button_tag "mu[#{qty}]", nil,
                                   record['matnr'] == rec['prefixed_matnr'] && record['Alt_UoM'] == rec['original_unit'],
                                   data: {
                                     action: "click->units#selectRecord",
                                     units_value_param: record['matnr'],
                                     units_unit_param: record['Alt_UoM'],
                                     units_ean_param: record['EAN']
                                   },
                                   disabled: params[:review].present?
              %>
            </td>

            <% keys.each do |key| %>
              <% highlight = record[key] == rec['ean'] %>
              <%= build_uom_field(key, record, highlight) %>
            <% end %>
          </tr>
        <% end %>
        </tbody>
      </table>

      <div class="d-flex border-1 border align-items-center p-1">
        <div class="pmatnr d-none">
          <%= hidden_field_tag "match_units[][quantity]", qty %>
        </div>
        <div class="use-matnr">
          <%= text_field_tag "match_units[][prefixed_matnr]", rec['prefixed_matnr'], data: { units_target: 'matnr' }, readonly: true, placeholder: 'Copy Fields from' %>
        </div>

        <div class="use-ean">
          <%= text_field_tag "match_units[][ean]", rec['ean'], data: { units_target: 'ean' }, readonly: true, placeholder: 'EAN' %>
        </div>

        <div class="use-unit d-flex flex-nowrap">
          <%= text_field_tag "match_units[][unit]", rec['unit'], data: { units_target: 'unit' }, readonly: true, placeholder: 'Unit' %>
          <div class="form-check d-flex flex-nowrap align-items-center mx-2">
            <%= check_box_tag "override[#{qty}]", "1", false, id: "override_#{qty}", class: "me-1 form-check-input", data: { action: "units#toggleUnitsOverride" }, disabled: params[:review].present? %>
            <label class="form-check-label" for="override_<%= qty %>">Override?</label>
          </div>
          <%= select_tag "match_units[][unit]", units_of_measure_options(with_description: true), disabled: true, class: 'd-none', data: { units_target: 'overrideUnit' } %>
          <%= text_field_tag "match_units[][original_unit]", original, data: { units_target: 'originalUnit' } %>
        </div>
      </div>
    </div>
  <% end %>

</div>

<%= javascript_tag do %>
  function initialize() {
    const n_list = <%= raw n_list.to_json %>;

    n_list.forEach(function (qty) {
      const groupName = `mu[${qty}]`;
      const radios = document.querySelectorAll(`input[type="radio"][name="${groupName}"]`);
      let selectedRadio = null;

      radios.forEach(function (radio) {
        radio.addEventListener('click', function () {
          if (selectedRadio === this) {
            this.checked = false;
            selectedRadio = null;

            // Clear all ean input fields when radio is deselected
            const eanInputs = document.querySelectorAll('input.match_units__ean');
            eanInputs.forEach(function (input) {
              input.value = '';
            });
          } else {
            selectedRadio = this;
          }
        });
      });
    });

    // Attach focus event listener to each ean input field to clear its value on focus
    const eanInputs = document.querySelectorAll('input.match_units__ean');
    eanInputs.forEach(function (input) {
      input.addEventListener('focus', function () {
        this.value = '';
      });
    });
  }

  // Check if the document is already loaded
  if (document.readyState !== 'loading') {
    initialize();
  } else {
    document.addEventListener('DOMContentLoaded', initialize);
  }
<% end %>
